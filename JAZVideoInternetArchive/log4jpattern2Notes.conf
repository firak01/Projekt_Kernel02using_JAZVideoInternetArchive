#
# Konfiguration über 'Pattern' file für log4j."
# Ist dies nicht gegeben wird eine default Konfiguration aus dem NotesLog4jPropertyGeneratorZZZ verwendet.
# Merke: In den 'Pattern' für die Konfiguration sind immer Platzhalter mit @@xyz@@ vorgesehen,
#           die Werte für diese Platzhalter werden in der (private) Methode .replacePlaceHolderAll(..) der Log4jPropertyGenaratorZZZ - Klasse ersetzt.
#
#Merke: In der aus diesem Pattern entstehenden Datei für log4j, müssen alle Pfadangaben mit doppeltem Backslash versehen sein.

# Merke: Das Konzept sieht vor, dass die Daten erst per ROLL-Appender in Files geloggt werden. (Der NOTESLOGGERAPPENDER wird zwar gleichzeitig ausgeführt).
#           Der NOTESAPPENDER fügt dann alle x-Mal die Inhalte der Dateien dem Notesdokument hinzu.
log4j.rootLogger=@@LEVEL@@, NOTESLOGGER

# Merke: Ggf. kann auch der STDOUTLOGGER zusätzlich verwendet werden (!!! nur als Alternative !!!) , der hier als Consolen-Appender definiert ist.
# Merke: Wenn ein weiterer ROLL-Appender verwenet wird, dann sollte sich die Datei dafür schon unterscheiden. Sonst werden in die Datei die Einträge doppelt gemacht.
#log4j.rootLogger=@@LEVEL@@, STDOUTLOGGER, ROLL, NOTESLOGGER
# Natürlich können entsprechend log4j, weitere Appender verwendet werden.

#################################################################
### Definition for Stdout logger
#################################################################

log4j.appender.STDOUTLOGGER=org.apache.log4j.ConsoleAppender
log4j.appender.STDOUTLOGGER.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.STDOUTLOGGER.layout.ConversionPattern=%d [%t] %-5p %c - %m%n

#################################################################
### Definition for Notes logger - writes to notes db
#################################################################

log4j.appender.NOTESLOGGER=basic.zNotes.use.log4j.NotesReportLogAppenderZZZ
log4j.appender.NOTESLOGGER.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.NOTESLOGGER.layout.ConversionPattern=%d [%t] %-5p %c - %m%n

log4j.appender.NOTESLOGGER.File=@@FILENAMETEMP@@

#je mehr gecached wird, desto höher die Perfomrance und desto mehr wird in ein Notesdokument protokolliert !!!
log4j.appender.NOTESLOGGER.maxFileSize=10KB

# Keep 10 backup files\n"
#log4j.appender.NOTESLOGGER.maxBackupIndex=10

# Name of target Database
log4j.appender.NOTESLOGGER.NotesDBLog=@@DBApplicationLog@@

#Domino Server Name (e.g. ServerName/Organisation)
log4j.appender.NOTESLOGGER.NotesServer=@@DBServer@@

# Password for local/domino or IIOP Session - can be left empty on servers
log4j.appender.NOTESLOGGER.NotesPassword=@@Password@@

#User\n
log4j.appender.NOTESLOGGER.NotesUser=@@User@@

# Enable a Replication Flag in the generated NotesLog-Documents
log4j.appender.NOTESLOGGER.flagReplication=@@FlagReplication@@



#################################################################
### Definition for Rolling File Appender logger
#################################################################

log4j.appender.ROLL=org.apache.log4j.RollingFileAppender
#Nur wenn dieses File nicht noch anders genutzt wird, sonst ein anderes verwenden: log4j.appender.ROLL.File=@@FILENAMETEMP@@
log4j.appender.ROLL.File=c:\\temp\\rolling_file_appender.txt


log4j.appender.ROLL.maxFileSize=1MB
# Keep 10 backup files\n"
log4j.appender.ROLL.maxBackupIndex=10

log4j.appender.ROLL.layout=org.apache.log4j.PatternLayout
log4j.appender.ROLL.layout.ConversionPattern=%d [%t] %-5p %c - %m%n
