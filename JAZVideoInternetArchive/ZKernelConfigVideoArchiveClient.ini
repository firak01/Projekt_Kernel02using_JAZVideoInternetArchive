##########################################################################################################################
### Diese Ini-Datei ist die Konfiguration des Kernels. Der Name/Pfad muý bei Erstellung des KernelObjekts übergeben werden
##########################################################################################################################
;Merke: An die Zeilen angehýngte Semikoli werden nicht als Kommentare erkannt. Am Zeilenanfang schon.


### Application Test konfigurieren, Produktivsystem 01

[VIA!01]
#Hier ist ein Beispiel dafür, wie durch Einsetzen des EmptyTags die Suche beschleunigt werden kann.
KernelConfigPath=<z:Empty/>
KernelConfigFile=ZKernelConfigVideoArchiveClient.ini

#KernelConfigPathuse.via.client.FrmMainVIA=
# Nach Umstellung auf Singleton heisst die Klasse so nicht mehr.... KernelConfigFileuse.via.client.FrmMainVIA=ZKernelConfigVideoArchiveClient.ini
# verwende statt dessen:
KernelConfigPathuse.via.client.FrmMainSingletonVIA=<z:Empty/>
KernelConfigFileuse.via.client.FrmMainSingletonVIA=ZKernelConfigVideoArchiveClient.ini

#Hierin kann LogZZZ, das ja beim Initialisieren des Kernels auch zur Verfýgung gestellt wird, die Protokollierung durchführen
KernelLogPath=c:\fglKernel\KernelLog
KernelLogFile=ZKernelLog_VideoArchiveClient.txt

### Modulkonfiguration(en), jeder Test als eigenes Modul, in DIESER ini-Datei ##################
# Jede Klasse, die ein main() enthýlt 'kann' hier als Modul konfiguriert werden
# Dazu den Klassennamen hier angeben. Um eine extra Datei zu sparen, kann hier auch der gleiche Dateiname wie fýr den Kernel angegeben werden.
# Schema: KernelConfig + [Path/File] + Klassenname
;KernelConfigPathKernelNotes=
;KernelConfigFileKernelNotes=ZKernelConfigVideoArchiveServlet_test.ini

### Programmkonfiguration(en) (per Aliasnamen)
# Wenn in diesem File die Module definiert sind, dann kýnnen hier auch die einzelnen Programme der Module definiert werden.
#
# Merke:
# Jeder Test ist als eigenes Programm definiert. D.h. Er hat in dieser Datei eine eigene Section.
# Es ist mýglich Aliaswerte zu definieren (die dann in die Section kommen).
# Aber es reicht auch aus den Programnamen als Section zu verwenden.
# Schema: Klassenname oder Aliasname = Aliaswert

# Testprogramme, hier werden Aliasnamen definiert.
;Das ist ein feststehender Name, der verwendet werden muss, wenn der Context aus dieser Configuration geholt werden soll.
;Der Vorteil von Aliasnamen ist, das sie fýr mehrere 'Programme' verwendet werden kýnnen.
#Finden der Notes-Context Objekte. z.B. Configurationsdb
;das ist nicht der eigentliche Programname .....
use.via.client.DlgIPExternalVIA=IP_Context
;use.via.client.module.ip.ProgramIPContentVIA=IP_Context
use.via.client.FrmExportDataHttpSingletonVIA=Export_Context
;TODO xyzVIA=Login_Context

#################################################################
### Parameter, die auf Modulebenen, bzw. Applikationsebene definiert wurden.
# Merke: Wenn fýr die Modulkonfiguration dieselbe ini-Datei wie fýr die Applikationskonfiguration verwendet wird, dann entspricht das auch einem Parameter, der auf Applikationsebenen konfiguriert wurde.
#            Beispiel: Wenn also einParameter in der Section [VIA#01] liegt, dann ist das ein "Applikationsparameter" und ein "Modulparameter", wenn das ini-File fýr die Applikationskonfiguration auch als ini-File fýr die Modulkonfiguration verwendet wird.
#
# Merke: Parameter der Hauptmaske sollten auf Modulebenen definiert werden, weil man an den Namen des Moduls durch frameParent.getClass().getName() rankommt.

;Dieser Parameter gibt an, welche Datei als Logo in den CENTRAL-Panel geladen wird (im Hauptframe, darum Applikationsparameter=Modulparameter)
FileLogo=logo_fritz_tv.png

;Diese Parameter werden speziell fýr log4j benýtigt
Log4jName=LogVIA
Log4jLevel=DEBUG

;TODO: DIESER EINTRAG  (Log4jPatternPath) SOLLTE AUCH WEGGELASSEN WERDEN KýNNEN !!!
Log4jPathPattern=
Log4jFilePattern=

Log4jPathConfig=c:\fglkernel\kernelconfig
Log4jFileConfig=log4j.conf


#################################################################
### Konkrete(s) Programm(e)
# Entweder ýber den Aliasnamen definiert, oder ýber den Klassennamen direkt
# Fýr eine spezielle Umgebung kann der Programmname auch definiert werden nach dem Schema:
#         ApplicationKey + "#" + Systemnumber + "!" + Programmname
# Merke: Eintrýge, die fýr die spezielle Umgebung gemacht wurden, ersetzen die fýr den allgemeinen Programmnamen gemachte Eintrýge.




#defierte programme ýber einen Aliasnamen.
############################################

[IP_Context]
;Das ist die URL, in welcher die externe IP-Adresse des Servers gefunden werden kann.
URL2Read=http://fgl.homepage.t-online.de/pagIPLinkFGL.html

;Zu Testzwecken kann auch eine Datei als Quelle der IP-Adresse angegeben werden
;URL2Read=file:///C:\1fgl\Workspace\Eclipse3FGL\JAZVideoInternetArchive\pagIPLinkFGL4Debug.html


;Ggf. zu verwendender Proxy
;ProxyHost=145.254.22.10
ProxyHost=
ProxyPort=8000

;Die IP, welche in der URL2Read gefunden und dann hier abgespeichert wurde. Merke: In der Entwicklungsumgebung ist 192.168.3.101 zu verwenden
IPExternal=79.196.199.114

##########################################

[Export_Context]
;Das ist der Laufwerksbuchstabe, der als Default in die Combobox eingestellt werden soll. (in Form von z.B.: D:\ )
DriveDefault=C:\

;Das ist der Dateiname, der für den Katalog der Serien verwendet wird
CatalogSerieTitleFilename=VideoArchiveCatalog_SerieTitle.txt

;Das ist der Dateiname, der für den Katalog der Komprimierungstypen von Dateien verwendet wird
CatalogFileCompressionFilename=c:\fglkernel\kernelTest\VideoArchiveCatalog_FileCompression.txt

;Das ist die URL des Servlets, fýr die Erstellung der Notesdokumente: Durch KernelExpressionIniSolverZZZ.compute() wird der Ausdruck: <Z>[IP_Context]IPExternal</Z> aufgelýst
URLServlet = "http://<Z>[IP_CONTEXT]IPExternal</Z>/servlet/VIADocumentCreate"
;URLServlet = "http://192.168.3.101/servlet/VIADocumentCreate"

;Die Form in der das Ergebnis vom Servlet zurýckgeliefert werden soll: text/html oder text/xml
ResultContentType=text/xml

;Falls xml zurýckgegeben wird, werden diese Felder wichtig. Sie geben den Tag an, in die an den Client auszugebende Werte stehen
ResultTagMessage=statusmessage
ResultTagIdCarrier=idcarrier
ResultTagSequenzeNrCarrier=sequenzenrcarrier


[Login_Context]
;Das ist der Internetname der Notes-ID
Username=Fritz Lindhauer

;Internet Kennwort des Notes Users
;TODO: Das Passwort sollte hier verschlýsselt abgelegt werden
Password=1fgl2fgl

;Das ist die URL, welche fýr das login verwendet wird. Durch KernelExpressionIniSolverZZZ.compute() wird der Ausdruck: <Z>[IP_CONTEXT]IPExternal</Z> aufgelýst
;fr get.. URLLogin = "http://<Z>[IP_CONTEXT]IPExternal</Z>/names.nsf?login"
URLLogin = "http://<Z>[IP_CONTEXT]IPExternal</Z>/names.nsf?login"
;URLLogin = "http://192.168.3.101/names.nsf?login"

###########################################################################################################

[VIA!02]
#Hierin kann LogZZZ, das ja beim Initialisieren des Kernels auch zur Verfýgung gestellt wird, die Protokollierung durchfýhren
KernelLogPath=c:\fglKernel\KernelLog
KernelLogFile=ZKernelLog_VideoArchiveClient.txt

### Modulkonfiguration(en), jeder Test als eigenes Modul, in DIESER ini-Datei ##################
# Jede Klasse, die ein main() enthýlt 'kann' hier als Modul konfiguriert werden
# Dazu den Klassennamen hier angeben. Um eine extra Datei zu sparen, kann hier auch der gleiche Dateiname wie fýr den Kernel angegeben werden.
# Schema: KernelConfig + [Path/File] + Klassenname
KernelConfigPathuse.via.client.FrmMainSingletonVIA=c:\Java\VIAClient
KernelConfigFileuse.via.client.FrmMainSingletonVIA=ZKernelConfigVideoArchiveClientFGL02.ini


### Programmkonfiguration(en) (per Aliasnamen)
# Wenn in diesem File die Module definiert sind, dann kýnnen hier auch die einzelnen Programme der Module definiert werden.
#
# Merke:
# Jeder Test ist als eigenes Programm definiert. D.h. Er hat in dieser Datei eine eigene Section.
# Es ist mýglich Aliaswerte zu definieren (die dann in die Section kommen).
# Aber es reicht auch aus den Programnamen als Section zu verwenden.
# Schema: Klassenname oder Aliasname = Aliaswert

# Testprogramme, hier werden Aliasnamen definiert.
;Das ist ein feststehender Name, der verwendet werden muss, wenn der Context aus dieser Configuration geholt werden soll.
;Der Vorteil von Aliasnamen ist, das sie fýr mehrere 'Programme' verwendet werden kýnnen.
#Finden der Notes-Context Objekte. z.B. Configurationsdb
;das ist nicht der eigentliche Programname .....
use.via.client.DlgIPExternalVIA=IP_Context!02
use.via.client.FrmExportDataHttpSingletonVIA=Export_Context

#################################################################
### Parameter, die auf Modulebenen, bzw. Applikationsebene definiert wurden.
# Merke: Wenn fýr die Modulkonfiguration dieselbe ini-Datei wie fýr die Applikationskonfiguration verwendet wird, dann entspricht das auch einem Parameter, der auf Applikationsebenen konfiguriert wurde.
#            Beispiel: Wenn also einParameter in der Section [VIA#01] liegt, dann ist das ein "Applikationsparameter" und ein "Modulparameter", wenn das ini-File fýr die Applikationskonfiguration auch als ini-File fýr die Modulkonfiguration verwendet wird.
#
# Merke: Parameter der Hauptmaske sollten auf Modulebenen definiert werden, weil man an den Namen des Moduls durch frameParent.getClass().getName() rankommt.

;Dieser Parameter gibt an, welche Datei als Logo in den CENTRAL-Panel geladen wird (im Hauptframe, darum Applikationsparameter=Modulparameter)
FileLogo=c:\java\VIAClient\logo_fritz_tv.png

;Diese Parameter werden speziell fýr log4j benýtigt
Log4jName=LogVIA
Log4jLevel=DEBUG

;TODO: DIESER EINTRAG  (Log4jPatternPath) SOLLTE AUCH WEGGELASSEN WERDEN KýNNEN !!!
Log4jPathPattern=
Log4jFilePattern=

Log4jPathConfig=c:\fglkernel\kernelconfig
Log4jFileConfig=log4j.conf


#################################################################
### Konkrete(s) Programm(e)
# Entweder ýber den Aliasnamen definiert, oder ýber den Klassennamen direkt
# Fýr eine spezielle Umgebung kann der Programmname auch definiert werden nach dem Schema:
#         ApplicationKey + "#" + Systemnumber + "!" + Programmname
# Merke: Eintrýge, die fýr die spezielle Umgebung gemacht wurden, ersetzen die fýr den allgemeinen Programmnamen gemachte Eintrýge.

#defierte programme ýber einen Aliasnamen.
############################################

[IP_Context!02]
;Das ist die URL, in welcher die externe IP-Adresse des Servers gefunden werden kann. Zu Testzwecken hier eine feste Datei.
URL2Read=file:///C:\java\VIAClient\pagIPLinkFGL4Debug.html

;Ggf. zu verwendender Proxy
;ProxyHost=145.254.22.10
ProxyHost=
ProxyPort=8000

;Die IP, welche in der URL2Read gefunden und dann hier abgespeichert wurde.
IPExternal=192.168.3.103

############################################################################################################
############# DEBUG Konfiguration - ENTWICKLUNG ##########################################################################
############################################################################################################

[VIA!03]
#Hierin kann LogZZZ, das ja beim Initialisieren des Kernels auch zur Verfýgung gestellt wird, die Protokollierung durchfýhren
KernelLogPath=c:\fglKernel\KernelLog
KernelLogFile=ZKernelLog_VideoArchiveClient03_.txt

### Modulkonfiguration(en), jeder Test als eigenes Modul, in DIESER ini-Datei ##################
# Jede Klasse, die ein main() enthýlt 'kann' hier als Modul konfiguriert werden
# Dazu den Klassennamen hier angeben. Um eine extra Datei zu sparen, kann hier auch der gleiche Dateiname wie fýr den Kernel angegeben werden.
# Schema: KernelConfig + [Path/File] + Klassenname
;KernelConfigPathKernelNotes=
;KernelConfigFileKernelNotes=ZKernelConfigVideoArchiveServlet_test.ini

KernelConfigPathuse.via.client.FrmMainSingletonVIA=
KernelConfigFileuse.via.client.FrmMainSingletonVIA=ZKernelConfigVideoArchiveClient.ini


### Programmkonfiguration(en) (per Aliasnamen)
# Wenn in diesem File die Module definiert sind, dann kýnnen hier auch die einzelnen Programme der Module definiert werden.
#
# Merke:
# Jeder Test ist als eigenes Programm definiert. D.h. Er hat in dieser Datei eine eigene Section.
# Es ist mýglich Aliaswerte zu definieren (die dann in die Section kommen).
# Aber es reicht auch aus den Programnamen als Section zu verwenden.
# Schema: Klassenname oder Aliasname = Aliaswert

# Testprogramme, hier werden Aliasnamen definiert.
;Das ist ein feststehender Name, der verwendet werden muss, wenn der Context aus dieser Configuration geholt werden soll.
;Der Vorteil von Aliasnamen ist, das sie fýr mehrere 'Programme' verwendet werden kýnnen.
#Finden der Notes-Context Objekte. z.B. Configurationsdb
;das ist nicht der eigentliche Programname .....
use.via.client.DlgIPExternalVIA=IP_Context!03
;use.via.client.module.ip.ProgramIPContentVIA=IP_Context!03
use.via.client.FrmExportDataHttpSingletonVIA=Export_Context!03
;TODO xyzVIA=Login_Context

#################################################################
### Parameter, die auf Modulebenen, bzw. Applikationsebene definiert wurden.
# Merke: Wenn fýr die Modulkonfiguration dieselbe ini-Datei wie fýr die Applikationskonfiguration verwendet wird, dann entspricht das auch einem Parameter, der auf Applikationsebenen konfiguriert wurde.
#            Beispiel: Wenn also einParameter in der Section [VIA#01] liegt, dann ist das ein "Applikationsparameter" und ein "Modulparameter", wenn das ini-File fýr die Applikationskonfiguration auch als ini-File fýr die Modulkonfiguration verwendet wird.
#
# Merke: Parameter der Hauptmaske sollten auf Modulebenen definiert werden, weil man an den Namen des Moduls durch frameParent.getClass().getName() rankommt.

;Dieser Parameter gibt an, welche Datei als Logo in den CENTRAL-Panel geladen wird (im Hauptframe, darum Applikationsparameter=Modulparameter)
FileLogo=logo_fritz_tv.png

;Diese Parameter werden speziell fýr log4j benýtigt
Log4jName=LogVIA
Log4jLevel=DEBUG

;TODO: DIESER EINTRAG  (Log4jPatternPath) SOLLTE AUCH WEGGELASSEN WERDEN KýNNEN !!!
Log4jPathPattern=
Log4jFilePattern=

Log4jPathConfig=c:\fglkernel\kernelconfig
Log4jFileConfig=log4j.conf


#################################################################
### Konkrete(s) Programm(e)
# Entweder ýber den Aliasnamen definiert, oder ýber den Klassennamen direkt
# Fýr eine spezielle Umgebung kann der Programmname auch definiert werden nach dem Schema:
#         ApplicationKey + "#" + Systemnumber + "!" + Programmname
# Merke: Eintrýge, die fýr die spezielle Umgebung gemacht wurden, ersetzen die fýr den allgemeinen Programmnamen gemachte Eintrýge.




#defierte programme ýber einen Aliasnamen.
############################################

[IP_Context!03]
;Das ist die URL, in welcher die externe IP-Adresse des Servers gefunden werden kann.
;URL2Read=http://fgl.homepage.t-online.de/pagIPLinkFGL.html

;Zu Testzwecken kann auch eine Datei als Quelle der IP-Adresse angegeben werden
URL2Read=file:///C:\1fgl\Workspace\Eclipse3FGL\JAZVideoInternetArchive\pagIPLinkFGL4Debug.html


;Ggf. zu verwendender Proxy
;ProxyHost=145.254.22.10
ProxyHost=
ProxyPort=8000

;Die IP, welche in der URL2Read gefunden und dann hier abgespeichert wurde. Merke: In der Entwicklungsumgebung ist 192.168.3.101 zu verwenden
IPExternal=10.1.69.169

##########################################

[Export_Context!03]
;Das ist der Laufwerksbuchstabe, der als Default in die Combobox eingestellt werden soll. (in Form von z.B.: D:\ )
DriveDefault=D:\

;Das ist der Dateiname, der fýr den Katalog der Serien verwendet wird
CatalogSerieTitleFilename=.\VideoArchiveCatalog_SerieTitle.txt

;Das ist der Dateiname, der fýr den Katalog der Komprimierungstypen von Dateien verwendet wird
CatalogFileCompressionFilename=c:\fglkernel\kernelTest\VideoArchiveCatalog_FileCompression.txt

;Das ist die URL des Servlets, fýr die Erstellung der Notesdokumente: Durch KernelExpressionIniSolverZZZ.compute() wird der Ausdruck: <Z>[IP_Context]IPExternal</Z> aufgelýst
URLServlet = "http://<Z>[IP_CONTEXT!03]IPExternal</Z>/servlet/VIADocumentCreate"
;URLServlet = "http://192.168.3.101/servlet/VIADocumentCreate"


;Die Form in der das Ergebnis vom Servlet zurýckgeliefert werden soll: text/html oder text/xml
ResultContentType=text/xml

;Falls xml zurýckgegeben wird, werden diese Felder wichtig. Sie geben den Tag an, in die an den Client auszugebende Werte stehen
ResultTagMessage=statusmessage
ResultTagIdCarrier=idcarrier


[Login_Context]
;Das ist der Internetname der Notes-ID
Username=Fritz Lindhauer

;Internet Kennwort des Notes Users
;TODO: Das Passwort sollte hier verschlýsselt abgelegt werden
Password=1fgl2fgl

;Das ist die URL, welche fýr das login verwendet wird. Durch KernelExpressionIniSolverZZZ.compute() wird der Ausdruck: <Z>[IP_CONTEXT]IPExternal</Z> aufgelýst
URLLogin = "http://<Z>[IP_CONTEXT!03]IPExternal</Z>/names.nsf?login"
;URLLogin = "http://192.168.3.101/names.nsf?login"

[Local_Store_Context]
;Das ist die Konfiguration für die Datei, in der die XML Daten gespeichert werden, als Alternative zur sofortigen ýbermittlung an den Server
XMLStorePath=.\export
XMLStoreFile=ExportToServerVIA.xml

[use.via.client.DlgIPExternalVIA]
IPExternal=192.168.3.103
